{"version":3,"sources":["components/Drumpad.js","components/Display.js","App.js","serviceWorker.js","index.js"],"names":["Drumpad","props","className","id","onClick","playAudio","src","Display","text","App","state","bind","helperPlayAudio","onKeyPressed","document","addEventListener","this","removeEventListener","e","x","keyCode","y","String","fromCharCode","toUpperCase","sound","string","getElementById","play","setState","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.722a78c6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Drumpad = (props) => {\r\n    return (\r\n        <div>\r\n         <div className=\"row\">\r\n          <div className=\"col-xs-4\"><button className=\"btn btn-block drum-pad\" id=\"Q-sound\" onClick={()=>props.playAudio(\"Q\")}><b>Q</b><audio className=\"clip\" id=\"Q\" src=\"https://res.cloudinary.com/dtssxoyjn/video/upload/v1602113997/68441__pinkyfinger__piano-c_iperg4.wav\" ></audio> </button></div>\r\n          <div className=\"col-xs-4\"><button className=\"btn btn-block drum-pad\" id=\"W-sound\" onClick={()=>props.playAudio(\"W\")}><b>W</b><audio className=\"clip\" id=\"W\" src=\"https://res.cloudinary.com/dtssxoyjn/video/upload/v1602197517/68442__pinkyfinger__piano-d_rhyoc8.wav\" ></audio> </button></div>\r\n          <div className=\"col-xs-4\"><button className=\"btn btn-block drum-pad\" id=\"E-sound\" onClick={()=>props.playAudio(\"E\")}><b>E</b><audio className=\"clip\" id=\"E\" src=\"https://res.cloudinary.com/dtssxoyjn/video/upload/v1602197591/68443__pinkyfinger__piano-e_yy1iwu.wav\" ></audio> </button></div>\r\n         </div>\r\n\r\n         <div className=\"row\">\r\n          <div className=\"col-xs-4\"><button className=\"btn btn-block drum-pad\" id=\"A-sound\" onClick={()=>props.playAudio(\"A\")}><b>A</b><audio className=\"clip\" id=\"A\" src=\"https://res.cloudinary.com/dtssxoyjn/video/upload/v1602197708/68444__pinkyfinger__piano-eflat_ynabqy.wav\" ></audio></button></div>\r\n          <div className=\"col-xs-4\"><button className=\"btn btn-block drum-pad\" id=\"S-sound\" onClick={()=>props.playAudio(\"S\")}><b>S</b><audio className=\"clip\" id=\"S\" src=\"https://res.cloudinary.com/dtssxoyjn/video/upload/v1602197767/68445__pinkyfinger__piano-f_d7boiq.wav\" ></audio></button></div>\r\n          <div className=\"col-xs-4\"><button className=\"btn btn-block drum-pad\" id=\"D-sound\" onClick={()=>props.playAudio(\"D\")}><b>D</b><audio className=\"clip\" id=\"D\" src=\"https://res.cloudinary.com/dtssxoyjn/video/upload/v1602197806/68446__pinkyfinger__piano-f_d1ochz.wav\" ></audio></button></div>\r\n         </div>\r\n         \r\n         <div className=\"row\">\r\n          <div className=\"col-xs-4\"><button className=\"btn btn-block drum-pad\" id=\"Z-sound\" onClick={()=>props.playAudio(\"Z\")}><b>Z</b><audio className=\"clip\" id=\"Z\" src=\"https://res.cloudinary.com/dtssxoyjn/video/upload/v1602197880/68447__pinkyfinger__piano-g_mqhqct.wav\" ></audio></button></div>\r\n          <div className=\"col-xs-4\"><button className=\"btn btn-block drum-pad\" id=\"X-sound\" onClick={()=>props.playAudio(\"X\")}><b>X</b><audio className=\"clip\" id=\"X\" src=\"https://res.cloudinary.com/dtssxoyjn/video/upload/v1602197939/68448__pinkyfinger__piano-g_jjmpju.wav\" ></audio></button></div>\r\n          <div className=\"col-xs-4\"><button className=\"btn btn-block drum-pad\" id=\"C-sound\" onClick={()=>props.playAudio(\"C\")}><b>C</b><audio className=\"clip\" id=\"C\" src=\"https://res.cloudinary.com/dtssxoyjn/video/upload/v1602113997/68441__pinkyfinger__piano-c_iperg4.wav\" ></audio></button></div>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Drumpad\r\n","import React from 'react'\r\n\r\nconst Display = (props) => {\r\n    return (\r\n        <div id=\"display\">\r\n          <p className= \"displayText\"><b>{props.text}</b></p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display\r\n","import React, { Component } from 'react'\nimport Drumpad from './components/Drumpad'\nimport Display from './components/Display'\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      text: ''\n        };\n    this.playAudio = this.playAudio.bind(this);\n    this.helperPlayAudio= this.helperPlayAudio.bind(this);\n    this.onKeyPressed= this.onKeyPressed.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.onKeyPressed.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyPressed.bind(this));\n  } \n  \n  \n  onKeyPressed(e){\n    var x = e.keyCode;         // Get the Unicode value\n    var y = String.fromCharCode(x); \n\n    y = y.toUpperCase();\n\n    if(y === \"Q\" || y === \"W\" || y === \"E\" || y === \"A\" || y === \"S\" || y === \"D\" || y === \"Z\" || y=== \"X\" || y === \"C\"){\n      this.playAudio(y);\n    }\n  }\n\n \n\n  //helper function to playAudio function\n  helperPlayAudio(sound, string){\n    var audio= document.getElementById(sound);\n    audio.play();\n    this.setState({\n      text: string\n    });\n  }\n\n  \n  playAudio(sound){\n    if(sound === \"Q\"){\n      this.helperPlayAudio(sound, \"C Key\");\n    }else if(sound=== \"W\"){\n      this.helperPlayAudio(sound, \"D Key\");\n    }else if(sound=== \"E\"){\n      this.helperPlayAudio(sound, \"E Key\");\n    }else if(sound=== \"A\"){\n      this.helperPlayAudio(sound, \"E Flat Key\");\n    }else if(sound=== \"S\"){\n      this.helperPlayAudio(sound, \"F Key\");\n    }else if(sound=== \"D\"){\n      this.helperPlayAudio(sound, \"F Flat Key\");\n    }else if(sound=== \"Z\"){\n      this.helperPlayAudio(sound, \"G Key\");\n    }else if(sound=== \"X\"){\n      this.helperPlayAudio(sound, \"G Flat Key\");\n    }else if(sound=== \"C\"){\n      this.helperPlayAudio(sound, \"C Flat Key\");\n    }\n  }\n\n  \n\n  render() {\n    return (\n      <div id= \"drum-machine\">\n        <Drumpad playAudio={this.playAudio} />\n        <Display text= {this.state.text}/>\n     </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}